{"version":3,"sources":["components/Header.js","components/Display.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Display","props","inputKeyDown","e","val","target","value","key","state","tags","find","tag","toLowerCase","setState","tagInput","onchange","search","toggle","bind","loading","persons","collapse","this","a","fetch","response","json","data","students","console","log","filteredNames","filter","person","firstName","includes","lastName","type","placeholder","onChange","map","style","display","flexDirection","src","pic","alt","email","company","skill","city","grades","reduce","sum","curr","Number","length","Button","color","onClick","float","Collapse","isOpen","Card","CardBody","indexOf","parseFloat","index","onKeyDown","ref","c","id","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4503421d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"topic\">Hatch Ways Assessment</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport { Button, Collapse,  CardBody, Card } from 'reactstrap';\r\nimport { FaPlus} from 'react-icons/fa'\r\n\r\nexport default class Display extends React.Component{\r\n    \r\n    constructor(props){\r\n        \r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state= {\r\n            loading: true,\r\n            persons: [],\r\n            search: '',\r\n            tags: [],\r\n            collapse:false\r\n        }\r\n     \r\n        this.inputKeyDown = this.inputKeyDown.bind(this);\r\n } \r\n \r\ntoggle() {\r\n  this.setState({ collapse: !this.state.collapse });\r\n}\r\n\r\ninputKeyDown = e => {\r\n  const val = e.target.value;\r\n  if (e.key === \"Enter\" && val) {\r\n    if (\r\n      this.state.tags.find(tag => tag.toLowerCase() === val.toLowerCase())\r\n    ) {\r\n      return;\r\n    }\r\n    this.setState({ tags: [...this.state.tags, val] });\r\n    this.tagInput.value = null;\r\n  }\r\n};\r\n   \r\n    async componentDidMount(){\r\n\r\n        \r\n        const url= \"https://api.hatchways.io/assessment/students\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        this.setState({ persons: data.students, loading: false});\r\n        console.log(this.state.persons);  \r\n\r\n    }\r\n\r\n    onchange = e =>{\r\n      this.setState({ search: e.target.value});\r\n     }\r\n\r\n    \r\n      \r\n render(){\r\n        \r\n      const { search} = this.state;\r\n      const filteredNames = this.state.persons.filter((person)=>{\r\n      return person.firstName.toLowerCase().includes(search.toLowerCase()) || person.lastName.toLowerCase().includes(search.toLowerCase()) ; });\r\n    \r\n        \r\n     if(this.state.loading){return<div>loading!!</div>; }\r\n\r\n      if(!this.state.persons){ return<div>Didn't get a student's info</div> }\r\n        \r\n      return(\r\n            <div>\r\n                  <input type=\"text\"  placeholder=\"Search by Name...\" onChange={ this.onchange} />\r\n                  <br/>\r\n                  <input type=\"text\" placeholder=\"Search by tags...\" onchange={this.onchange} />\r\n                   <hr/>\r\n               \r\n                 <ul>\r\n\r\n                    {filteredNames.map((person) => (\r\n                        \r\n                     <li  className=\"list\" key={person.id}>\r\n                        <div style={{display: 'flex', flexDirection: 'row'}}><img src={person.pic} alt=\"avatar\"/>\r\n                         <div>\r\n                                <div><h1>{person.firstName} {\" \" } {person.lastName}</h1></div>\r\n\r\n                                <div><label>Email: </label>{person.email}</div>\r\n\r\n                                <div><label>Company: </label>{person.company}</div>\r\n\r\n                                <div><label>Skill: </label>{person.skill}</div>\r\n\r\n                                <div><label>City: </label>{person.city}</div>\r\n\r\n                                <div><label>Average: </label>{ person.grades.reduce((sum, curr) => sum + Number(curr), 0) / person.grades.length}% </div>\r\n\r\n                          </div>\r\n\r\n                        </div>\r\n                            \r\n                        <Button color=\"dark\" onClick={this.toggle} style={{float: 'right'}}><FaPlus /></Button>\r\n                         \r\n                        <Collapse key={person.id} isOpen={this.state.collapse}>\r\n                          \r\n                          <Card > {person.grades.map(val => (\r\n                            <CardBody>\r\n                              <div> Test {person.grades.indexOf(val)} :{\" \"}{parseFloat(val) + \"%\"}</div>\r\n                             \r\n                            </CardBody>\r\n                            ))}\r\n                          \r\n                          <br />\r\n                            {this.state.tags.map((tag, index) => ( <div> <span  key={index}>{tag} </span></div>\r\n                            ))}\r\n                            <br/>\r\n                              <input type=\"text\" onKeyDown={this.inputKeyDown} ref={c => {this.tagInput = c;}} placeholder=\"add a tag...\"/>\r\n                           \r\n                          </Card>\r\n                          \r\n                        \r\n                        </Collapse>\r\n                                            \r\n                        <hr/>\r\n                    </li>\r\n                            \r\n                    ))}\r\n                    \r\n                </ul>\r\n                \r\n            </div>\r\n        );\r\n            \r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\n    \r\n    \r\n    \r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Display from './components/Display';\n\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n       <Display />\n    \n    \n      \n      \n    </div>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}